<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitc.bmn_project.mapper.LeeMapper">
    <insert id="insertReservation" parameterType="com.bitc.bmn_project.DTO.ReservationDTO">
        INSERT INTO reservation_tp (customer_idx, customer_name, ceo_idx, ceo_store, reservation_stat, reservation_people, reservation_contents, reservation_date, reservation_time)
        VALUES (#{customerIdx}, #{customerName}, #{ceoIdx}, #{ceoStore}, 1, #{reservationPeople}, #{reservationContents}, #{reservationDate}, #{reservationTime})
    </insert>
    <select id="selectReservation" parameterType="int" resultType="com.bitc.bmn_project.DTO.ReservationDTO">
        SELECT *
        FROM reservation_tp
        WHERE ceo_idx = #{ceoIdx}
    </select>
    <select id="getReservationInfo" parameterType="com.bitc.bmn_project.DTO.ReservationDTO" resultType="com.bitc.bmn_project.DTO.ReservationDTO">
        SELECT *
        FROM reservation_tp
        WHERE customer_idx = #{customerIdx}
        AND ceo_idx = #{ceoIdx}
        AND reservation_date = #{reservationDate}
        AND reservation_time = #{reservationTime}
    </select>
    <select id="selectDateReservation" parameterType="map" resultType="com.bitc.bmn_project.DTO.ReservationDTO">
        SELECT *
        FROM reservation_tp
        WHERE ceo_idx = #{ceoIdx}
        AND reservation_date = #{reservationDate}
    </select>
    <select id="selectTimeReservation" parameterType="com.bitc.bmn_project.DTO.ReservationDTO" resultType="com.bitc.bmn_project.DTO.ReservationDTO">
        SELECT *
        FROM reservation_tp
        WHERE ceo_idx = #{ceoIdx}
        AND reservation_date = #{reservationDate}
        AND reservation_time = #{reservationTime}
    </select>
    <update id="reservationConfirm" parameterType="com.bitc.bmn_project.DTO.ReservationDTO">
        UPDATE reservation_tp
        SET reservation_stat = 2
        WHERE ceo_idx = #{ceoIdx}
        AND reservation_date = #{reservationDate}
        AND reservation_time = #{reservationTime}
    </update>
    <delete id="reservationRefuse" parameterType="com.bitc.bmn_project.DTO.ReservationDTO">
        DELETE FROM reservation_tp
        WHERE ceo_idx = #{ceoIdx}
        AND reservation_date = #{reservationDate}
        AND reservation_time = #{reservationTime}
    </delete>

    <select id="myPageReservation" parameterType="int" resultType="com.bitc.bmn_project.DTO.ReservationDTO">
        SELECT ceo_idx, R.ceo_store, reservation_date, reservation_time, reservation_stat
        FROM customer_tp U
        JOIN reservation_tp R
        ON U.customer_idx = R.customer_idx
        WHERE U.customer_idx = #{customerIdx}
        AND (R.reservation_stat = 1 OR R.reservation_stat = 2)
        ORDER BY reservation_date DESC, reservation_time DESC
    </select>
    <select id="myPageFollow" parameterType="int" resultType="String">
        SELECT customer_follow
        FROM customer_tp
        WHERE customer_idx = #{customerIdx}
    </select>
    <update id="myPageCusFollowCancel" parameterType="map">
        UPDATE customer_tp
        SET customer_follow = REPLACE(customer_follow, #{ceoStore}, '')
        WHERE customer_idx = #{customerIdx}
    </update>
    <select id="myPageReview" parameterType="int" resultType="com.bitc.bmn_project.DTO.ReviewDTO">
        SELECT ceo_idx, ceo_store, review_contents, review_title, review_score, review_date
        FROM customer_tp U
        JOIN review_tp V
        ON U.customer_idx = V.customer_idx
        WHERE U.customer_idx = #{customerIdx}
        ORDER BY review_date DESC
    </select>
    <select id="myPageQuestion" parameterType="int" resultType="com.bitc.bmn_project.DTO.QuestionDTO">
        SELECT ceo_idx, ceo_store, question_title, question_date, question_complete
        FROM customer_tp U
        JOIN question_tp Q
        ON U.customer_idx = Q.customer_idx
        WHERE U.customer_idx = #{customerIdx}
        ORDER BY question_date DESC
    </select>
    <delete id="myPageCusOut" parameterType="int">
        DELETE FROM customer_tp
        WHERE customer_idx = #{customerIdx}
    </delete>
    <update id="myPageCusChange" parameterType="com.bitc.bmn_project.DTO.CustomerDTO">
        UPDATE customer_tp
        SET customer_pw = #{customerPw}, customer_name = #{customerName}, customer_nick = #{customerNick}, customer_gender = #{customerGender} , customer_age = #{customerAge}
        WHERE customer_idx = #{customerIdx}
    </update>
    <select id="customerInfo" parameterType="int" resultType="com.bitc.bmn_project.DTO.CustomerDTO">
        SELECT *
        FROM customer_tp
        WHERE customer_idx = #{customerIdx}
    </select>
    <select id="myPageCeoReservation" parameterType="int" resultType="com.bitc.bmn_project.DTO.ReservationDTO">
        SELECT ceo_idx, customer_name, reservation_people, reservation_contents, reservation_date, reservation_time, reservation_stat
        FROM reservation_tp
        WHERE ceo_idx = #{ceoIdx}
        ORDER BY reservation_date DESC, reservation_time DESC
    </select>
    <!--    사장 마이페이지 팔로워 리스트 가져오기-->
    <select id="myPageCeoFollowerList" parameterType="String" resultType="com.bitc.bmn_project.DTO.CustomerDTO">
        SELECT
        *
        FROM
        customer_tp
        WHERE
        customer_follow
        LIKE
        concat('%',#{ceoStore},'%')
    </select>
    <!--    사장 마이페이지 팔로워 삭제하기-->
    <update id="myPageCeoFollowerDelete" parameterType="map">
        UPDATE
        customer_tp
        SET
        customer_follow = REPLACE(customer_follow, CONCAT(#{ceoStore}, ','), '')
        WHERE
        customer_idx = #{customerIdx}
    </update>
    <select id="myPageCeoReview" parameterType="int" resultType="com.bitc.bmn_project.DTO.ReviewDTO">
        SELECT ceo_idx, customer_nick, review_title, review_score, review_date
        FROM review_tp
        WHERE ceo_idx = #{ceoIdx}
        ORDER BY review_date DESC
    </select>
    <select id="myPageCeoQuestion" parameterType="int" resultType="com.bitc.bmn_project.DTO.QuestionDTO">
        SELECT ceo_idx, customer_nick, question_title, question_date, question_complete
        FROM question_tp
        WHERE ceo_idx = #{ceoIdx}
        ORDER BY question_date DESC
    </select>
    <delete id="myPageCeoOut">
        DELETE FROM ceo_tp
        WHERE ceo_idx = #{ceoIdx}
    </delete>
    <update id="myPageCeoUpdate" parameterType="com.bitc.bmn_project.DTO.CeoDTO">
        UPDATE ceo_tp
        SET ceo_pw = #{ceoPw}, ceo_name = #{ceoName}
        WHERE ceo_idx = #{ceoIdx}
    </update>
    <select id="ceoInfo" parameterType="int" resultType="com.bitc.bmn_project.DTO.CeoDTO">
        SELECT *
        FROM ceo_tp
        WHERE ceo_idx = #{ceoIdx}
    </select>
    <update id="myPageCeoStoreUpdate" parameterType="com.bitc.bmn_project.DTO.CeoDTO">
        UPDATE ceo_tp
        SET
        ceo_store = #{ceoStore},
        ceo_main_menu = #{ceoMainMenu},
        ceo_detail_menu1 = #{ceoDetailMenu1},
        ceo_menu_img1 = #{ceoMenuImg1},
        ceo_detail_menu2 = #{ceoDetailMenu2},
        ceo_menu_img2 = #{ceoMenuImg2},
        ceo_detail_menu3 = #{ceoDetailMenu3},
        ceo_menu_img3 = #{ceoMenuImg3},
        ceo_detail_menu4 = #{ceoDetailMenu4},
        ceo_menu_img4 = #{ceoMenuImg4},
        ceo_detail_menu5 = #{ceoDetailMenu5},
        ceo_menu_img5 = #{ceoMenuImg5},
        ceo_detail_menu6 = #{ceoDetailMenu6},
        ceo_menu_img6 = #{ceoMenuImg6},
        ceo_open_time = #{ceoOpenTime},
        ceo_closing_time = #{ceoClosingTime},
        ceo_city_address = #{ceoCityAddress},
        ceo_full_address = #{ceoFullAddress},
        ceo_call_number = #{ceoCallNumber},
        ceo_contents = #{ceoContents},
        ceo_category = #{ceoCategory},
        ceo_thumbnail_img = #{ceoThumbnailImg},
        ceo_main_img = #{ceoMainImg},
        ceo_lat = #{ceoLat},
        ceo_lon = #{ceoLon}
        WHERE ceo_idx = #{ceoIdx}
    </update>
    <select id="customer1stList" resultType="int">
        SELECT COUNT(customer_idx) AS customer_cnt FROM customer_tp WHERE customer_grade = 1
    </select>
    <select id="customer2ndList" resultType="int">
        SELECT COUNT(customer_idx) AS customer_cnt FROM customer_tp WHERE customer_grade = 2
    </select>
    <select id="customerList" resultType="int">
        SELECT COUNT(customer_idx) AS customer_cnt FROM customer_tp WHERE customer_grade = 1 OR 2
    </select>
    <select id="ceo1stList" resultType="int">
        SELECT COUNT(ceo_idx) AS ceo_cnt FROM ceo_tp WHERE ceo_grade = 1 OR ceo_grade = 2
    </select>
    <select id="ceo2ndList" resultType="int">
        SELECT COUNT(ceo_idx) AS ceo_cnt FROM ceo_tp WHERE ceo_grade = 3
    </select>
    <select id="ceoList" resultType="int">
        SELECT COUNT(ceo_idx) AS ceo_cnt FROM ceo_tp WHERE ceo_grade = 1 OR ceo_grade = 2 OR ceo_grade = 3
    </select>

    <!-- 관리자 페이지 - 가게 리스트 출력 -->
    <!-- 가게 등급 -> 1: 등록 요청된 가게 / 2: 승인된 가게 / 0: 승인 거부된 가게-->
    <select id="getStoreList" resultType="com.bitc.bmn_project.DTO.CeoDTO">
        SELECT ceo_idx, ceo_name, ceo_store, ceo_main_menu, ceo_category
        FROM ceo_tp
        WHERE ceo_grade = 1
    </select>
    <!-- 관리자 페이지 - 회원 리스트 출력(리뷰 작성 수, 댓글 작성 수 포함) -->
    <select id="getCustomerList" resultType="com.bitc.bmn_project.DTO.CustomerDTO">
        SELECT c.customer_idx, c.customer_id, c.customer_name, c.customer_nick,
        c.customer_gender, c.customer_age,
        length(c.customer_follow) - length(REPLACE(c.customer_follow,',','')) as customer_follow,
        c.customer_grade, c.customer_join_dt, c.customer_ban, IFNULL(r.cnt, 0) as customer_review_count,
        IFNULL(com.cnt, 0) as customer_comment_count
        FROM customer_tp c LEFT OUTER JOIN (SELECT customer_idx, count(review_idx) as cnt FROM review_tp GROUP BY
        customer_idx) As r
        ON c.customer_idx = r.customer_idx LEFT OUTER JOIN (SELECT customer_idx, count(comment_idx) as cnt FROM
        comment_tp GROUP BY customer_idx) As com
        ON c.customer_idx = com.customer_idx
        WHERE c.customer_ban = "N" AND c.customer_grade != 10
        ORDER BY customer_idx DESC
    </select>
</mapper>

